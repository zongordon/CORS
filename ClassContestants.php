<?php//Moved meta description and keywords to header.php//Moved kill statement code to prevent error when recordset isn't empty//Added link to go to ClassesList.php//Declare and initialise variables$colname_rsClass = '';$class_gender = ''; $contestant_height = ''; $contestant_result = ''; $contestant_gender = ''; $sql_db = '';//Access level top administrator$MM_authorizedUsers = "1";$MM_donotCheckaccess = "false";$editFormAction = filter_input(INPUT_SERVER,'PHP_SELF');if (filter_input(INPUT_SERVER,'QUERY_STRING')) {$editFormAction .= "?" . htmlentities(filter_input(INPUT_SERVER,'QUERY_STRING'));}//Fetch the selected Classif (filter_input(INPUT_GET, 'class_id')) {    $colname_rsClass = filter_input(INPUT_GET, 'class_id');}// Delete the selected registration when clicking the Delete buttonif (filter_input(INPUT_POST,'MM_delete') && filter_input(INPUT_POST,'MM_delete') == 'delete_reg') {    $reg_id = filter_input(INPUT_POST, 'reg_id');    require('Connections/DBconnection.php');               $query = "DELETE FROM registration WHERE reg_id = :reg_id";    $stmt_rsUserexists = $DBconnection->prepare($query);    $stmt_rsUserexists->bindValue(':reg_id', $reg_id, PDO::PARAM_INT);       $stmt_rsUserexists->execute();    $stmt_rsUserexists->closeCursor();}$pagetitle="T&auml;vlande i klassen - admin";// Includes Several code functionsinclude_once('includes/functions.php');//Includes Restrict access code functioninclude_once('includes/restrict_access.php');// Includes HTML Headinclude_once('includes/header.php');//Include top navigation links, News and sponsor sectionsinclude_once("includes/news_sponsors_nav.php");?> <!-- start page --><div id="pageName"><h1><?php echo $pagetitle?></h1></div><!-- Include different navigation links depending on authority  --><div id="localNav"><?php include_once("includes/navigation.php"); ?></div><div id="content">        <div class="feature">           <div class="error"><?php// If the update form is sent (button clicked), validation will startif (filter_input(INPUT_POST,'MM_update') && filter_input(INPUT_POST,'MM_update') == 'update_reg') {    $colname_rsClass = filter_input(INPUT_POST, 'class');   //Catch anything wrong with query    try {        //Select Class gender for selected class        require('Connections/DBconnection.php');                   $query1 = "SELECT class_gender FROM classes WHERE class_id = :class_id";        $stmt_rsClassGender = $DBconnection->prepare($query1);        $stmt_rsClassGender->execute(array(':class_id' => $colname_rsClass));        $row_rsClassGender = $stmt_rsClassGender->fetch(PDO::FETCH_ASSOC);    }       catch(PDOException $ex) {        echo "An Error occured: ".$ex->getMessage();    }                  $class_gender = $row_rsClassGender['class_gender'];   $contestant_result = filter_input(INPUT_POST, 'contestant_result');   $contestant_height = filter_input(INPUT_POST, 'contestant_height');   $contestant_gender = filter_input(INPUT_POST, 'contestant_gender');   $reg_id = filter_input(INPUT_POST, 'reg_id');      $sql_db = 'yes';        // Check if input is numeric, if $contestant_height is entered	    	if (!empty($contestant_height)) {	    		if (!ctype_digit($contestant_height)) {	      		// contestant_height input is not numeric      		echo '<h3>Bara siffror &auml;r till&aring;tet i f&auml;ltet f&ouml;r l&auml;ngd!</h3>';      		$sql_db = 'no';	    	}    	}             // Check if input is numeric, if $contestant_result is entered	    	if (!empty($contestant_result)) {	    		if (!ctype_digit($contestant_result)) {	      		// $contestant_result input is not numeric      		echo '<h3>Bara siffror &auml;r till&aring;tet i f&auml;ltet f&ouml;r resultat!</h3>';      		$sql_db = 'no';	    	}    	}             if ($class_gender <> $contestant_gender) {	      	// Compare $contestant_gender with $class_gender      	echo '<h3>T&auml;vlandes k&ouml;n st&auml;mmer inte &ouml;verens med den valda klassen!</h3>';      	$sql_db = 'no';	}//Kill statement$stmt_rsClassGender->closeCursor();}				//Save the updated information   	if ($sql_db == 'yes') {                    //Catch anything wrong with query        try {            require('Connections/DBconnection.php');                           // Update the registration in accordance with the input from the update form, regarding class and result for the contestant when clicking the button and if the form is validated ok            $query2 = "UPDATE registration SET             contestant_result = :contestant_result,             contestant_height = :contestant_height,             class_id = :class_id              WHERE reg_id = :reg_id";            $stmt_rsUpdate = $DBconnection->prepare($query2);                                              $stmt_rsUpdate->bindValue(':contestant_result', filter_input(INPUT_POST, trim('contestant_result')), PDO::PARAM_INT);                   $stmt_rsUpdate->bindValue(':contestant_height', filter_input(INPUT_POST, trim('contestant_height')), PDO::PARAM_INT);                $stmt_rsUpdate->bindValue(':class_id', $colname_rsClass, PDO::PARAM_INT);            $stmt_rsUpdate->bindValue(':reg_id', $reg_id, PDO::PARAM_INT);            $stmt_rsUpdate->execute();         }               catch(PDOException $ex) {                echo "An Error occured: ".$ex->getMessage();            }           $stmt_rsUpdate->closeCursor();	}	    //Catch anything wrong with query    try {        require('Connections/DBconnection.php');                   // Select the contestants and their information for the selected class        $query3 = "SELECT a.club_name, re.reg_id, re.contestant_result, re.contestant_height, re.contestant_startnumber, co.contestant_name, co.contestant_gender, cl.class_id FROM registration AS re INNER JOIN classes AS cl USING (class_id) INNER JOIN contestants AS co USING (contestant_id) INNER JOIN account AS a USING (account_id) INNER JOIN clubregistration AS clu USING (club_reg_id) WHERE cl.class_id = :class_id ORDER BY club_startorder, reg_id";        $stmt_rsRegistrations = $DBconnection->prepare($query3);        $stmt_rsRegistrations->execute(array(':class_id' => $colname_rsClass));        $totalRows_rsRegistrations = $stmt_rsRegistrations->rowCount();    }       catch(PDOException $ex) {        echo "An Error occured: ".$ex->getMessage();    }                  //Catch anything wrong with query    try {        // Select data for the selected class        $query4 = "SELECT class_id, class_category, class_discipline, class_gender_category, class_age, class_weight_length FROM classes WHERE class_id = :class_id";        $stmt_rsClass = $DBconnection->prepare($query4);        $stmt_rsClass->execute(array(':class_id' => $colname_rsClass));        $row_rsClass = $stmt_rsClass->fetch(PDO::FETCH_ASSOC);    }       catch(PDOException $ex) {        echo "An Error occured: ".$ex->getMessage();    }                   ?>        </div><?php if ($totalRows_rsRegistrations == 0) { // Show if recordset empty ?><h3>Det finns ingen t&auml;vlande i klassen!</h3><p><a href="ClassesList.php">Tillbaka till T&auml;vlingsklasser</a></p><?php } // Show if recordset empty if ($totalRows_rsRegistrations > 0) { // Show if recordset not empty ?><p>&Auml;ndra t&auml;vlingsklass, l&auml;ngd eller placering och klicka p&aring; Spara eller ta bort anm&auml;lan.</p><h3><?php  echo $row_rsClass['class_discipline'].' | '.$row_rsClass['class_gender_category'].' | '.$row_rsClass['class_category'];if ($row_rsClass['class_age'] == "") {         echo ""; } if ($row_rsClass['class_age'] <> "") {     echo ' | '.$row_rsClass['class_age'].' &aring;r'.'  ';     }if ($row_rsClass['class_weight_length'] == "") {     echo "";     } if ($row_rsClass['class_weight_length'] <> "") { echo ' | '.$row_rsClass['class_weight_length'];}?></h3><table width ="100%" border="1"><tr><td>    <strong>T&auml;vlingsklass - Klubb - T&auml;vlande - L&auml;ngd (eventuellt) - Placering - Spara - Ta bort anm&auml;lan</strong></td></tr><tr><td><table width ="100%" ><?php while($row_rsRegistrations = $stmt_rsRegistrations->fetch(PDO::FETCH_ASSOC)) { ?><tr><form action="<?php echo $editFormAction; ?>" method="POST" enctype="application/x-www-form-urlencoded" name="update_reg" id="update_reg"><td><select name="class" id="class"><?php    //Catch anything wrong with query    try {        // Select all classes for the current competition        $query5 = "SELECT cl.class_id, cl.comp_id, cl.class_category, cl.class_discipline, cl.class_gender, cl.class_gender_category,cl.class_weight_length, cl.class_age FROM classes AS cl JOIN competition AS co ON cl.comp_id = co.comp_id WHERE co.comp_current = 1 ORDER BY cl.class_discipline, cl.class_gender, cl.class_age, cl.class_weight_length, cl.class_gender_category";        $stmt_rsClasses = $DBconnection->query($query5);    }       catch(PDOException $ex) {        echo "An Error occured: ".$ex->getMessage();    }               while($row_rsClasses = $stmt_rsClasses->fetch(PDO::FETCH_ASSOC)) {  ?><option value="<?php echo $row_rsClasses['class_id']?>"<?php if (!(strcmp($row_rsClasses['class_id'], $colname_rsClass))) {echo "selected=\"selected\"";} ?>><?php echo $row_rsClasses['class_discipline'].' | '.$row_rsClasses['class_gender_category'].' | '.$row_rsClasses['class_weight_length'].' | '.$row_rsClasses['class_age'].' &aring;r'?></option> <?php} ?></select></label></td><td>    <label><input name="club_name" type="text" id="club_name" value="<?php echo $row_rsRegistrations['club_name']; ?>" readonly="readonly"/></label></td><td>    <label><input name="contestant_name" type="text" id="contestant_name" value="<?php echo $row_rsRegistrations['contestant_name']; ?>" readonly="readonly"/></label></td><td>    <label><input name="contestant_height" type="text" id="contestant_height" value="<?php if ($row_rsRegistrations['contestant_height'] < 1){ echo ''; } else { echo $row_rsRegistrations['contestant_height'];} ?>" size="1" maxlength="3" /></label><td>    <label><input name="contestant_result" type="id" id="contestant_result" value="<?php  if ($row_rsRegistrations['contestant_result'] < 1){ echo ''; } else { echo $row_rsRegistrations['contestant_result'];} ?>" size="1" /></label></td><td>    <?php if ($row_rsRegistrations['contestant_result'] == "") { echo ''; }?><?php if ($row_rsRegistrations['contestant_result'] <> "") { echo ':a'; } ?></td><td>    <label><input type="submit" name="update_reg" id="update_reg" value="Spara" /></label></td><input name="reg_id" type="hidden" id="reg_id" value="<?php echo $row_rsRegistrations['reg_id']; ?>" /><input type="hidden" name="MM_update" value="update_reg" /><input type="hidden" name="contestant_gender" id="contestant_gender" value="<?php echo $row_rsRegistrations['contestant_gender']; ?>" /></form></td><form action="<?php echo $editFormAction; ?>" method="POST" enctype="application/x-www-form-urlencoded" name="delete_reg" id="delete_reg">    <td>        <label><input type="submit" name="delete_reg" id="delete_reg" value="Ta bort" /></label>    </td>    <input name="reg_id" type="hidden" id="reg_id" value="<?php echo $row_rsRegistrations['reg_id']; ?>" />    <input type="hidden" name="MM_delete" value="delete_reg" /></form></tr><?php } ?></table></td></tr></table><p><a href="ClassesList.php">Klicka h&auml;r s&aring; kommer du tillbaka till f&ouml;reg&aring;ende sida!</a></p><?php //Kill statements$stmt_rsClasses->closeCursor();$stmt_rsRegistrations->closeCursor();} // Show if recordset not empty ?>    </div></div><?php include("includes/footer.php");?></body></html><?php//Kill DB connection$DBconnection = null;?>